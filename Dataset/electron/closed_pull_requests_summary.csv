pull_request,number_of_commits,number_of_comments,number_of_reviews,user_type,user_login,closed_at,number_of_additions,number_of_deletions,number_of_files_changed,number_of_days,message
11610,1,0,0,Externals,nitsakh,2018-01-09 23:00:15,6,2,2,0,Test PR for @zcbenz .
11599,1,5,0,Externals,johev09,2018-01-08 14:02:31,1,1,1,0,"Tested on OS: Mac OS X 10.12.6

`browserWindow.setVisibleOnAllWorkspaces(boolean)` was not able to show app over Fullscreen app's workspaces. This commit fixes the function to do so. The change is inspired from [Helium](http://heliumfloats.com/) app's [code](https://github.com/JadenGeller/Helium/blob/b35a416376dee7184f788e6ae5736f19890d3ddc/Helium/Helium/HeliumPanelController.swift#L122)."
11596,15,1,0,Internals,zcbenz,2018-01-08 11:35:31,109,28,12,0,"Backports https://github.com/electron/electron/pull/11589 to 1.8.x.

Refs https://github.com/electron/libchromiumcontent/pull/431."
11543,1,2,0,Externals,Amandakita,2017-12-31 10:52:09,1,0,1,0,"function FeaturedPost(a){(function(e){var h={blogURL:"""",MaxPost:5,idcontaint:""#featuredpost"",ImageSize:500,interval:10000,autoplay:false,loadingClass:""loadingxx"",pBlank:""http://3.bp.blogspot.com/-v45kaX-IHKo/VDgZxWv0xUI/AAAAAAAAHAo/QJQf8Dlh3xc/s1600/grey.gif"",MonthNames:[""Jan"",""Feb"",""Mar"",""Apr"",""May"",""Jun"",""Jul"",""Aug"",""Sep"",""Oct"",""Nov"",""Dec""],tagName:false};h=e.extend({},h,a);var g=e(h.idcontaint);var c=h.blogURL;var d=h.MaxPost*200;if(h.blogURL===""""){c=window.location.protocol+""//""+window.location.host}g.html('<div id=""slides""><ul class=""randomnya""></ul></div><div id=""buttons""><a href=""#"" id=""prevx"" title=""prev""></a><a href=""#"" id=""nextx"" title=""next""></a></div>').addClass(h.loadingClass);var f=function(w){var q,k,m,u,x,p,t,v,r,l="""",s=w.feed.entry;for(var o=0;o<s.length;o++){for(var n=0;n<s[o].link.length;n++){if(s[o].link[n].rel==""alternate""){q=s[o].link[n].href;break}}if(""media$thumbnail""in s[o]){u=s[o].media$thumbnail.url.replace(/\/s[0-9]+\-c/g,""/s""+h.ImageSize+""-c"")}else{u=h.pBlank.replace(/\/s[0-9]+(\-c|\/)/,""/s""+h.ImageSize+""$1"")}k=s[o].title.$t;r=s[o].published.$t.substring(0,10);m=s[o].author[0].name.$t;x=r.substring(0,4);p=r.substring(5,7);t=r.substring(8,10);v=h.MonthNames[parseInt(p,10)-1];l+='<li><a target=""_blank"" href=""'+q+'"" title=""'+k+'""><div class=""overlayx""></div><img class=""random"" src=""'+u+'"" title=""'+k+'""><h4>'+k+'</h4></a><div class=""label_text""><span class=""date""><span class=""dd"">'+t+'</span> <span class=""dm"">'+v+'</span> <span class=""dy"">'+x+'</span></span> <span class=""autname"">'+m+""</span></div></li>""}e(""ul"",g).append(l)};var b=function(){var i=""/-/""+h.tagName;if(h.tagName===false){i="""";e.ajax({url:c+""/feeds/posts/default""+i+""?max-results=""+h.MaxPost+""&orderby=published&alt=json-in-script"",success:f,dataType:""jsonp"",cache:true})}else{e.ajax({url:c+""/feeds/posts/default""+i+""?max-results=""+h.MaxPost+""&orderby=published&alt=json-in-script"",success:f,dataType:""jsonp"",cache:true})}(function(){setTimeout(function(){e(""#prevx"").click(function(){e(""#slides li:first"").before(e(""#slides li:last""));return false});e(""#nextx"").click(function(){e(""#slides li:last"").after(e(""#slides li:first""));return false});if(h.autoplay){var k=h.interval;var l=setInterval(""rotate()"",k);e(""#slides li:first"").before(e(""#slides li:last""));e(""#slides"").hover(function(){clearInterval(l)},function(){l=setInterval(""rotate()"",k)});function j(){e(""#nextx"").click()}}g.removeClass(h.loadingClass)},d)})()};e(document).ready(b)})(jQuery)};function rotate(){$('#nextx').click();};document.write('')"
11516,1,1,0,Externals,leethomas,2017-12-25 16:10:13,10,3,3,0,"Addresses: https://github.com/electron/electron/issues/10699

Tested on Linux Mint but don't have access to a Windows box. Would someone be able to verify that this works on Windows as well, please?"
11477,250,1,0,Internals,ckerr,2017-12-19 15:52:58,3714,2911,303,0,Apply Felix's #11376 bugfix to `1-8-x`
11397,5,4,0,Externals,xdjinnx,2017-12-10 20:03:23,73,19,3,0,"I have implemented two new apis for the webview:
- setPermissionRequestHandler
- removePermissionRequestHandler

I implemented these because I were trying to handle a fullscreen event.
I had to dig around in the issue tracker to find that the session setPermissionRequestHandler could be used for this.

I decided to use an event object to allow and deny request because the chrome api already had an implementation of this.
https://developer.chrome.com/apps/tags/webview#event-permissionrequest

## Test instructions
I used this index.html to test blocking and allowing requests.
I also used this to remove the handler after adding it.

Test the fullscreen request by clicking on the fullscreen button.

``` html
<!DOCTYPE html>
<html>
  <head>
    <meta charset=""UTF-8"">
    <title>Hello World!</title>
  </head>
  <body>
    <h1>Hello World!</h1>
    <!-- All of the Node.js APIs are available in this renderer process. -->
    We are using Node.js <script>document.write(process.versions.node)</script>,
    Chromium <script>document.write(process.versions.chrome)</script>,
    and Electron <script>document.write(process.versions.electron)</script>.

    <webview id=""view"" src=""https://en.wikipedia.org/wiki/Cat#/media/File:Cat_poster_1.jpg"" style=""height: 600px;""></webview>

    <script>
      // You can also require other files to run in this process
      require('./renderer.js')

      window.onload = function () {
	      document.getElementById(""view"").setPermissionRequestHandler(function(e) {
		      e.request.allow();
	      })
      }
    </script>
  </body>
</html>

```"
11394,1,4,0,Externals,denysdovhan,2017-12-10 16:15:13,1,1,1,0,"Actually `action` works, not `actions`. It killed a lot of my time until I get that it's a mistake in docs. Hope it would help other developers."
11360,1,2,0,Externals,CommanderXL,2017-12-06 12:14:01,1,1,1,0,change 'ABI'  ->  'API'
11338,1,10,0,Externals,lzxb,2017-12-05 01:36:59,1,4,1,0,"```javascript
const callback = () => { }

const event = new Event()

event.addListener(callback)
event.addListener(callback)
event.removeListener(callback)

// Before
// event.listeners = [callback]

// Now
// event.listeners = []
```"
11308,1,2,0,Externals,slaweet,2017-12-01 15:32:25,2,2,1,0,"I was getting the following error when trying to build `Error: Exit code: ENOENT. spawn icns2png ENOENT`
This solution was proposed here: https://github.com/SimulatedGREG/electron-vue/issues/130#issuecomment-331993257"
11285,36,2,0,Externals,AdrienFery,2017-11-29 15:26:50,1313,47,53,0,"In order to release a commercial application on the Mac Apple Store, it must use in-app purchase (see [App Store Guidelines](https://developer.apple.com/app-store/review/guidelines/#in-app-purchase)). It is why I have added the in-app purchase feature for MacOS into Electron. I have tested the build and it works well but I didn't implement automatic tests.

Let me know if you see some modifications to do.

See [in-app-purchase.md](https://github.com/AdrienFery/electron/blob/in-app-purchase-macos/docs/api/in-app-purchase.md) for the module documentation.

<img width=""901"" alt=""screen shot"" src=""https://user-images.githubusercontent.com/8200795/33381878-7dec43d8-d51f-11e7-9d0d-7232c6dc707b.png"">
"
11252,1,0,0,Externals,alexeykuzmin,2017-11-24 22:49:03,1,1,1,0,Just to run CI builds for electron/libchromiumcontent#402.
11228,162,0,0,Internals,ckerr,2017-11-23 09:14:24,1377,694,169,0,"These are still rough notes and shouldn't be merged yet.

PRing them for collaborative editing"
11213,5,2,0,Externals,ssu2030,2017-11-22 07:02:49,108,3,4,0,"Adding some context : 
Show current version of Electron  
to help linux user."
11201,1,2,0,Externals,kstar0714,2017-11-21 16:47:50,0,0,0,0,
11200,250,2,0,Externals,kstar0714,2017-11-21 16:35:29,9855,50046,616,0, electron/electron-i18n/tree/master/content -> electron-i18n/content
11173,1,2,0,Externals,TiagoDanin,2017-11-19 16:41:32,0,0,0,0,Improve in Doc of Display API :)
11156,8,5,2,Externals,lipis,2017-11-17 23:14:11,2397,5072,122,0,More info #11143
11143,2,10,2,Externals,lipis,2017-11-17 00:58:30,2395,5072,122,0,"Prettier is now supporting Markdown since v1.8.0 and also formats the code inside the fences.

https://prettier.io

If something is actually breaking or it's wrong, please let me know as we can add a few ignore blocks in that case.
"
11129,2,2,0,Internals,jkleinsc,2017-11-15 16:34:06,184,1,2,0,This PR adds macOS builds for CircleCI
11119,1,4,0,Externals,oscarafuentes,2017-11-15 04:49:38,0,0,0,0,"[ci skip]

Electron Version: 1.7.8
OS Version: MacOS High Sierra Version 10.13.1 Beta

Was trying to import `net` module into `renderer.js`. It seems that the only attributes available from `require('electron')` are `['clipboard','crashReporter','nativeImage','shell','desktopCapturer','ipcRenderer','remote','screen','webFrame']`, none of which are `net`, which was misleading. I then found you could access built-in modules like this: https://github.com/electron/electron/blob/master/docs/api/remote.md#accessing-built-in-modules-in-the-main-process

![image](https://user-images.githubusercontent.com/19781463/32819134-8e5cfb44-c995-11e7-831a-d2e255a8fa30.png)"
11091,1,3,0,Externals,marswong,2017-11-11 02:07:39,0,0,0,0,
11085,250,2,0,Externals,lee-doppelganger,2017-11-10 20:42:55,45961,52818,1154,0,:wave:
11078,2,4,0,Externals,ssu2030,2017-11-10 08:09:49,1,1,1,0," Korean community existed in Slack, So fix it."
11045,1,3,0,Externals,minakawa-daiki,2017-11-07 11:13:16,1,1,1,0,"'current' is called '現在の(genzai-no)' in Japanese.
'減殺の' is called 'gensai-no'."
11023,1,7,0,Externals,ssu2030,2017-11-06 03:15:28,1,1,1,0,"Mostly spacing errors. Haven't look at full Korean translation, but will do.

Signed-off-by: Dongho Lee <ssu2030@naver.com>"
11021,1,4,0,Externals,ChangJoo-Park,2017-11-06 00:21:09,5,5,1,0,"I found old API instruction in electron documentation(KOREAN).

`--debug` is changed to `--inspect`, also --inspect-brk too."
11019,1,4,0,Externals,ssu2030,2017-11-05 14:19:38,3,3,1,0,"
1. Fix Mistranslation

- There was a mistranslation in the Core Philosophy part
  Philosophy has many meanings in Korea. It was used korea in the sense
   of like 'the philosophy of jung' = '철학'

- It seems to be right to modify the meaning of 'Ideology' = '이념'
  The '핵심' rather than the '중심' is more appropriate in Korean.

- '지원하지 않습니다.' more appropriate than '빠집니다'

2. Sentence Spacing

-  '그후에' should be changed to '그 후에'. It is a Korean grammar error

Signed-off-by: Dongho Lee <ssu2030@naver.com>"
11018,250,2,0,Externals,vincentwan100,2017-11-05 14:18:33,11157,5918,338,0,"In my project, I need to achieve a very special function: pull div content to external display, div content include text, image,  video..."
11002,3,4,0,Externals,ssu2030,2017-11-03 08:26:59,2,2,1,0,"#fix docs-translation/ko-KR/tutorial/about.md

## 1. Modify mistranslation

+    There was a mistranslation in the Core Philosophy part
       Philosophy has many meanings in Korea. It was used korea in the sense
+    of like 'the philosophy of jung' = '~~철학~~'
+    It seems to be right to modify the meaning of '_Ideology_' = '이념'
+    The '핵심' rather than the '~~중심~~' is more appropriate in Korean.
+
## 2. Sentence spacing

+   '~~그후에~~' should be changed to '그 후에'. It is a Korean grammar error"
10979,1,2,0,Externals,daluntw,2017-10-31 17:03:13,4,0,1,0,
10978,1,1,0,Externals,daluntw,2017-10-31 17:02:11,4,0,1,0,
10976,1,1,0,Externals,daluntw,2017-10-31 16:52:15,97,0,1,0,
10956,3,2,3,Externals,vadikcorp,2017-10-28 12:58:05,0,0,0,0,added quick-start.md in ukrainian
10907,1,1,0,Externals,amtj,2017-10-25 09:49:00,0,0,0,0,
10885,3,3,7,Externals,MarshallOfSound,2017-10-23 16:41:41,18,10,2,0,"Still needs to be validated but I think this will fix things 😄 

Fixes #10433"
10881,1,1,0,Externals,codebytere,2017-10-23 14:25:06,15,22,1,0,"Tracking work for https://github.com/electron/electron/issues/5869

Currently blocked pending https://github.com/electron/electron/pull/10888"
10878,4,2,0,Externals,codebytere,2017-10-23 04:28:09,55,76,1,0,"In my plans to implement removal of leading and trailing menu separators per https://github.com/electron/electron/issues/5869, i determined that some things needed to be cleaned up, refactored, and golfed before i could effectively proceed. 

/cc @zeke "
10855,1,1,0,Externals,dittos,2017-10-20 01:29:56,2,2,1,0,"`NativeWindowMac::IsFocused()` returns `[window_ isKeyWindow]` but focus event is fired on `windowDidBecomeMain`.

Fixes #9530.

See also: [Cocoa docs](https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/WinPanel/Concepts/ChangingMainKeyWindow.html#//apple_ref/doc/uid/20000236-128794) on key vs main windows."
10854,1,5,4,Externals,dittos,2017-10-20 01:24:16,85,1,9,0,Add `Notification.closeAll()` (static) and `Notification.close()`.
10785,1,2,0,Externals,aoom,2017-10-13 13:31:00,1,1,1,0,
10742,2,2,3,Externals,codebytere,2017-10-10 16:43:50,16,0,3,0,"Tracking progress for implementation of https://github.com/electron/electron/issues/9926
"
10729,11,0,0,Externals,excfergodst,2017-10-09 17:30:12,16,0,4,0,
10726,1,0,0,Externals,alexeykuzmin,2017-10-09 15:27:22,11,11,5,0,
10706,3,7,0,Externals,qazbnm456,2017-10-06 18:01:37,0,0,0,0,"Try to implement the certificate viewer for viewing detail of certificate through webContents's API and the button in DevTools. Now with this commit, only `macOS` is supported.

Screenshot:
![](https://i.imgur.com/2XnQnM9.png)"
10682,1,1,0,Externals,crweiner,2017-10-03 18:01:14,0,0,0,0,Update pull request
10523,2,1,0,Externals,leo,2017-09-14 20:44:06,6,3,1,0,This is a very important fix: As stated [here](https://electron.atom.io/docs/api/notification/) the current example is not correct.
10491,1,3,0,Externals,ImgBotApp,2017-09-12 04:41:16,0,0,3,0,"Hey there. I've just optimized all of your images. They are the same dimensions and quality as before, only they take up less space now.

\spec\fixtures\assets\3x3.png (83.83%))
\spec\fixtures\assets\2x2.jpg (83.66%))
\spec\fixtures\asar\unpack.asar.unpacked\atom.png (33.08%))"
10404,6,5,3,Externals,alexstrat,2017-08-30 22:18:20,54,0,2,0,"_Following #9494_

### Background
For extension's content scripts injection, Chromium relies on [""isolated world""](https://developer.chrome.com/extensions/content_scripts#execution-environment).

> Content scripts execute in a special environment called an isolated world. They have access to the DOM of the page they are injected into, but not to any JavaScript variables or functions created by the page. It looks to each content script as if there is no other JavaScript executing on the page it is running on. The same is true in reverse: JavaScript running on the page cannot call any functions or access any variables defined by content scripts.

In Electron, the current implementation relies on [`vm.runInThisContext`](https://github.com/electron/electron/blob/master/lib/renderer/content-scripts-injector.js#L16-L23) that does not have the same isolation properties.

### Objective
This PR wants to add the necessary APIs to deal with isolated world and use it in content scripts injection.

### Exploration
_Picked from #9494_
Here are my findings from diving into [`ScriptInjection`](https://cs.chromium.org/chromium/src/extensions/renderer/script_injection.h?type=cs&sq=package:chromium):
- it relies on `blink::WebFrame#executeScriptInIsolatedWorld`
- however there is no way to pass an existing `V8:Context` to `executeScriptInIsolatedWorld` (I think blink is creating contexts internally). Instead, chromium is hooking into `DidCreateScriptContext` in [` Dispatcher`](https://cs.chromium.org/chromium/src/extensions/renderer/dispatcher.cc?type=cs&sq=package:chromium&l=291) that returns a `V8:Context` freshly created.
- from there and by mapping `world_id` passed in `executeScriptInIsolatedWorld` and returned in `DidCreateScriptContext`, it can manipuate the `V8:Context` to add the necessary `chrome.*` APIs to the context (how exactly?)

### Plan
I think what can be done is:
- add `webFrame.executeJavaScriptInIsolatedWorld(worldId, code, ..)` to the `webFrame` API alongside the existing `webFrame.executeJavaScript`
- have an event `'did-create-script-context'` which callback returns `worldId` and `context` (type of context representing `v8::context`?)
- but how to inject chrome apis in the `context`? Looks like [this](https://github.com/electron/electron/blob/c6918966c25144e85956b8614bd5f005ae4e642a/atom/renderer/atom_renderer_client.cc#L172-L204) can lead to ideas.
- [bonus] add `webFrame.setIsolatedWorldContentSecurityPolicy` and `setIsolatedWorldSecurityOrigin` that could be needed at some point"
10376,1,2,0,Externals,beilunyang,2017-08-29 00:20:12,0,0,0,0,
10373,5,1,4,Externals,arnavb,2017-08-28 18:34:48,0,0,0,0,"In the file in this folder `bluetooth_chooser.cc`, I made a few small refactorings for clarity."
10354,35,2,9,Externals,arnavb,2017-08-25 16:26:26,0,0,0,0,"I refactored some of the functions and files so they could be shorter, such as by changing conditionals and using the ternary operator where it would introduce clarity in `return` statements. I also removed unnecessary code as well. Most of these refactorings are short and sweet, so they should have little effect on the behavior of the code."
10350,1,2,0,Externals,sgeisbacher,2017-08-25 09:01:34,22,0,1,0,there is a login-event on autoupdater when it needs auth for proxy. it's emitted here https://github.com/electron-userland/electron-builder/blob/master/packages/electron-updater/src/AppUpdater.ts#L109
10348,1,2,0,Externals,bigosmallm,2017-08-25 01:15:29,6,1,1,0,"The code as documented here does not work anymore.

`navigator.mediaDevices.getUserMedia` API has been updated to return a Promise object.
[https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia](https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia)

"
10331,1,2,0,Externals,akkyjumbade,2017-08-22 20:16:34,0,0,0,0,
10325,1,2,0,Externals,develar,2017-08-22 14:31:50,4,0,1,0,Add note about electron-updater (features listed in the mentioned docs).
10267,83,0,0,Externals,alexeykuzmin,2017-08-14 20:56:01,935,857,104,0,
10265,1,1,0,Externals,alexeykuzmin,2017-08-14 18:23:26,1,0,1,0,"Check [Travis builds](https://travis-ci.org/electron/electron/builds/263625304) in #10250, exactly this happens on a user's machine when they run `./script/bootstrap.py`.

```
$ ./script/bootstrap.py

> electron@1.7.6 install /Volumes/Transcend/Projects/electron
> node-gyp rebuild

gyp: binding.gyp not found (cwd: /Volumes/Transcend/Projects/electron) while trying to load binding.gyp
gyp ERR! configure error
gyp ERR! stack Error: `gyp` failed with exit code: 1
gyp ERR! stack     at ChildProcess.onCpExit (/usr/local/lib/node_modules/npm/node_modules/node-gyp/lib/configure.js:336:16)
gyp ERR! stack     at emitTwo (events.js:106:13)
gyp ERR! stack     at ChildProcess.emit (events.js:191:7)
gyp ERR! stack     at Process.ChildProcess._handle.onexit (internal/child_process.js:215:12)
gyp ERR! System Darwin 16.7.0
gyp ERR! command ""/usr/local/Cellar/node@6/6.11.0/bin/node"" ""/usr/local/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js"" ""rebuild""
gyp ERR! cwd /Volumes/Transcend/Projects/electron
gyp ERR! node -v v6.11.0
gyp ERR! node-gyp -v v3.6.2
gyp ERR! not ok
npm ERR! code ELIFECYCLE
npm ERR! errno 1
npm ERR! electron@1.7.6 install: `node-gyp rebuild`
npm ERR! Exit status 1
npm ERR!
npm ERR! Failed at the electron@1.7.6 install script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /Users/alkuzmin/.npm/_logs/2017-08-14T18_23_04_816Z-debug.log

Traceback (most recent call last):
  File ""./script/bootstrap.py"", line 250, in <module>
    sys.exit(main())
  File ""./script/bootstrap.py"", line 54, in main
    update_node_modules('.')
  File ""/Volumes/Transcend/Projects/electron/script/lib/util.py"", line 289, in update_node_modules
    execute_stdout(args, env)
  File ""/Volumes/Transcend/Projects/electron/script/lib/util.py"", line 186, in execute_stdout
    execute(argv, env)
  File ""/Volumes/Transcend/Projects/electron/script/lib/util.py"", line 174, in execute
    raise e
subprocess.CalledProcessError: Command '['npm', 'install']' returned non-zero exit status 1
```"
10247,113,6,4,Externals,liusy182,2017-08-11 14:51:45,29,2,4,0,"fixes #10240 

Return empty string when theme color turns out to have alpha value of 0 (transparent)."
10221,9,4,1,Externals,MarshallOfSound,2017-08-08 15:32:36,30,5,4,0,"This should fix the tests that were failing as a result of this merge before, basically putting this up so that LCC builds overnight and I can test this tomorrow with proper LCC builds"
10217,2,0,0,Internals,zcbenz,2017-08-08 06:20:42,1032,183,6,0,Continue of https://github.com/electron/electron/pull/10205 due to my mistake.
10210,1,1,0,Externals,smildlzj,2017-08-07 14:27:24,0,0,0,0,"support location api property: host/href/protocol/search/path/hash
```
var win = window.open('http://www.github.com');
//...
console.log(win.location.host);
//...
win.location.href = 'https://www.google.com'
```
"
10207,1,1,0,Externals,alespergl,2017-08-07 13:43:44,1,1,1,0,The latest libcc should make the Linux CI tests green again.
10205,0,7,0,Externals,HAMIDx9,2017-08-07 11:34:47,0,0,0,0,"This PR has patches to build arm64 electron package successfully. 
I've also provided unofficial packages for download until official releases prepared for the community.
This build has been tested successfully on Odroid C2 (arm64). Unfortunately support for electron-packager is not provided here.
You may just copy your resources to the `electron-v1.7.5-linux-arm64.zip` and run `electron` there.

libcromiumcontent build instructions:

```bash
$ git clone https://chromium.googlesource.com/chromium/src.git
$ cd libcromiumcontent
$ ./script/bootstrap
$ ./script/update -t arm64
$ ./script/build -t arm64
$ ./script/create-dist -t arm64
$ mkdir -p linux/arm64/7a9d4a1c9c265468dd54005f6c1920b2cc2c8ec3 # HACK for using later for electron build process
$ mv libchromiumcontent* linux/arm64/7a9d4a1c9c265468dd54005f6c1920b2cc2c8ec3
```



electron + arm64 support build instruction:
```bash
$ git clone https://github.com/HAMIDx9/electron.git
$ cd electron
$ ./script/bootstrap.py -v --target_arch=arm64 -u file:///home/hamidx9/dev/electron/libchromiumcontent/
$ ./script/build.py -c R
$ ./script/create-dist.py
$ ls ./dist/electron-v1.7.5-linux-arm64.zip
```


**Unofficial Builds**:
[electron-v1.7.5-linux-arm64-symbols.zip](https://www.hamidx9.ir/dl/electron_arm64/electron-v1.7.5-linux-arm64-symbols.zip)
[electron-v1.7.5-linux-arm64.zip](https://www.hamidx9.ir/dl/electron_arm64/electron-v1.7.5-linux-arm64.zip)
[ffmpeg-v1.7.5-linux-arm64.zip](https://www.hamidx9.ir/dl/electron_arm64/ffmpeg-v1.7.5-linux-arm64.zip)
[libchromiumcontent/libchromiumcontent-static.zip](https://www.hamidx9.ir/dl/electron_arm64/libchromiumcontent/libchromiumcontent-static.zip)
[libchromiumcontent/libchromiumcontent.zip](https://www.hamidx9.ir/dl/electron_arm64/libchromiumcontent/libchromiumcontent.zip)

**sha256sum**:
```bash
2d3fe036b4fa1efdb99b8fa15e03f11b9829428529640fa9db4794c8cd2babf7  electron-v1.7.5-linux-arm64-symbols.zip
2df42153e59d40ca03bc281cc515db3331d4facd9d2cdc7fe66aa660b76d43a2  electron-v1.7.5-linux-arm64.zip
4528e28412e5d1074b35e6bcb6198e07f0e4b6ef3434565b4d294124f9e01dbd  ffmpeg-v1.7.5-linux-arm64.zip
b4e8d028d34ce5a9010d4900140466e1f55c835ad7e64c0c7403d82ea41c44bf  libchromiumcontent/libchromiumcontent-static.zip
afa2486256ce561fd3a815e08a0dfee4841a7cbe467f3e518a4712aae48e25fe  libchromiumcontent/libchromiumcontent.zip
```
"
10203,1,3,0,Internals,zcbenz,2017-08-07 09:57:34,1,1,1,0,Include the change of https://github.com/electron/libchromiumcontent/pull/333.
10198,1,1,0,Internals,zeke,2017-08-04 23:09:17,22,0,1,0,just another step to make sure a draft release is legit
10194,8,5,0,Externals,alexeykuzmin,2017-08-04 11:25:35,12,13,9,0,**TODO**: Change target branch to *master*.
10187,1,12,0,Externals,saschagehlich,2017-08-03 09:34:03,46,23,3,0,"This PR adds a new `hideDisabledButtons` option to BrowserWindow's `titleBarStyle` option.

![screenshot 2017-08-01 16 35 35](https://user-images.githubusercontent.com/119684/28915391-4b1a9654-783f-11e7-8373-e5e93a0629bc.png)

Some implementation details: Since `NativeWindowMac`'s `IsMaximizable` method checks if the maximize button is enabled (which is always the case inside `InstallView()`), I had to add three new flags to the class: `minimizable_`, `maximizable_` and `closable_` which are set to the option the user has passed to the BrowserWindow."
10137,3,4,3,Externals,miniak,2017-07-27 12:45:04,962,961,13,0,"It's more correct to use the term element, as tag only refers to `<webview>` in HTML code. The DOM contains elements, also the API is `document.createElement` not `document.createTag`"
10136,1,1,0,Externals,robinwassen,2017-07-27 12:03:15,0,0,0,0,"Changed from [NSWindow toggleFullScreen:] to [NSView enterFullScreenMode:withOptions:] when enabling kiosk mode since it resolves a lot of kiosk mode related issues such as menu bar, dock and applications on other displays being visible.

Example issues that are solved are: #8426 and #1054

**Special note:** Worth mentioning is that this kiosk mode is so aggressive that it will not even allow dialogs to show - showing dialogs will practically cause the computer to hang, because you will not be able to interact with the application when the dialog is alive, and you cannot interact with the dialog since the application is running in strict full screen.

So this is a decision if it is worth a tighter kiosk mode with the con that dialogs does not work as intended.

Examples on a multi-screen setup:

**Before changes:**
![before_kiosk_changes](https://user-images.githubusercontent.com/302151/28669329-2c731a7a-72d4-11e7-83f8-66768332db86.png)

**After changes:**
![after_kiosk_changes](https://user-images.githubusercontent.com/302151/28669333-30582b4e-72d4-11e7-9c40-1daa78110e35.png)



"
10114,2,0,0,Internals,jkleinsc,2017-07-25 17:48:46,2,0,1,0,Attempt to fix ImportError: No module named google_compute_engine that is happening in Travis
10111,84,8,0,Externals,alexeykuzmin,2017-07-25 16:19:17,935,857,104,0,Rel to #9946.
10092,1,4,0,Externals,3n-mb,2017-07-23 01:29:42,8,8,1,0,"Adding missing `(optional)` to make structural part be the same as textual. In line with comment in #10091, i.e. that definition generating utility will properly generate overloading definitions, when first parameter is optional."
10091,1,1,0,Externals,3n-mb,2017-07-23 00:08:35,25,2,1,0,"Docs are used for generation of `d.ts`. Typescript likes optional parameters on the tail, and a signature with optional first parameter should be changed to overloading (?) multiple definitions. In this case, there should be two of them.

It may look uglier, cause we are repeating docs. May be we need some convention for cases like these? Or, may be, d.ts generation utility should work around first parameters, marked as optional. In later case, fix is trivial addition of `(optional)` for the first argument. Does utility handle first optional parameter, turning it into several definitions? I assumed not, but I may be wrong :) .

By the way `webRequest.onHeadersReceived([filter, ]listener)` and others need change like this."
10090,1,2,7,Externals,3n-mb,2017-07-22 23:05:41,3,3,1,0,"#### Issue 1:
Lines 2929-2945, definition of `registerFileProtocol(...)`.
Doc lines say (as well as docs on site),
```
     *  .... To handle
     * the request, the callback should be called with either the file's path or an
     * object that has a path property, e.g. callback(filePath) or callback({path:
     * filePath}). When callback is called with nothing, a number, or an object that
     * has an error property, the request will fail with the error number you
     * specified. 
```
but definition itself is
```
    registerFileProtocol(scheme: string, handler: (request: RegisterFileProtocolRequest, callback: (filePath?: string) => void) => void, completion?: (error: Error) => void): void;
```
`callback`'s function definition has arguments `filePath?: string`, but it should also take in values that will make request fail, i.e. `filePath?: string | number | ...`

#### Issue 2:
Lines 2922-2928, definition for `registerBufferProtocol(...)`.
Doc lines say (as well as docs on site),
```
     *  ....  The usage
     * is the same with registerFileProtocol, except that the callback should be called
     * with either a Buffer object or an object that has the data, mimeType, and
     * charset properties. Example:
     */
```
but definition itself is
```
    registerBufferProtocol(scheme: string, handler: (request: RegisterBufferProtocolRequest, callback: (buffer?: Buffer | MimeTypedBuffer) => void) => void, completion?: (error: Error) => void): void;
```
misses types for `buffer` argument in `callback`, that will make request to fail. It should be at least `buffer?: Buffer | MimeTypedBuffer | number`, which I know runs properly.

By the way, it seems that an *Example:* part of the doc line is chopped off.

#### Issue 3:
Lines 2917-2921, definition for `isProtocolHandled(...)`.
Doc lines say,
```
    /**
     * The callback will be called with a boolean that indicates whether there is
     * already a handler for scheme.
     */
```
but definition itself is
```
isProtocolHandled(scheme: string, callback: (error: Error) => void): void;
```
where callback argument should be `callback: (isHandled: boolean) => void`."
10089,33,0,0,Externals,AndreasM-Avd26,2017-07-22 12:57:38,205,47,27,0,
10029,1,6,0,Externals,gerhardberger,2017-07-16 22:17:16,28,3,5,0,"This PR adds a `setDisplayNotifications` method to the `app` object.

This allows to add a quick option for Electron apps to disable and enable displaying notifications, sort of like a more fine grained Do not disturb mode."
9968,1,2,0,Externals,Hum4n01d,2017-07-10 16:27:51,1,1,1,0,"If somebody wants to make an actual description, they can. :) Thanks for the awesome project!"
9905,3,4,0,Externals,awvalenti,2017-06-30 21:21:22,7,0,1,0,"Many users should benefit from knowing upfront how to generate a distributable package and how large will it be. For those reasons, I'm opening this pull request to include that info on README.md."
9893,2,0,0,Externals,ferreus,2017-06-29 04:41:19,18,1,4,0,"Because SetEnabled tracks number of calls and re-enables the window only when counter is back to 0,
Calling Show() on already visible window would prevent the modal lock to be released when modal is closed. This PR fixes it, by calling SetEnabled only when window is invisible. Preventing duplicate calls to SetEnabled.

"
9850,1,3,0,Externals,poiru,2017-06-25 18:08:46,1,0,1,0,Fixes #8793.
9848,1,3,0,Externals,liusy182,2017-06-25 09:02:19,60,12,3,0,"#9697 

Promisify `getZoomFactor()` and `getZoomLevel()` APIs"
9841,6,0,0,Externals,MarshallOfSound,2017-06-24 11:25:26,192,105,16,0,
9829,1,0,0,Externals,zh880517,2017-06-22 08:40:12,0,0,0,0,updat
9820,1,0,0,Externals,ferreus,2017-06-21 13:00:04,9,4,2,0,"SetEnabled uses internal counter to handle multiple calls to SetEnabled however that resulted in modal dialog not re-enabling the parent window, when used incorrectly."
9810,1,1,0,Externals,Tazeg,2017-06-20 15:35:31,0,0,0,0,
9809,0,0,0,Externals,ferreus,2017-06-20 14:32:24,0,0,0,0,"I tracked down this crash to https://chromium.googlesource.com/experimental/chromium/src/+/58.0.3029.110/content/browser/browser_plugin/browser_plugin_guest.h#153
```
WebContentsImpl* embedder_web_contents() const {
    return attached_ ? owner_web_contents_ : nullptr;
}
```

Which results in null pointer access on LoadURL when the view is hidden (Because it's detached).
This is actually not a matter of race condition. As it's simply enough to hide the webview, then issue LoadURL to crash it.

This will avoid the crash by simply refusing to navigate when the view is not attached."
9806,1,0,0,Externals,ferreus,2017-06-20 14:00:53,13,0,3,0,"I tracked down this crash to https://chromium.googlesource.com/experimental/chromium/src/+/58.0.3029.110/content/browser/browser_plugin/browser_plugin_guest.h#153
```
WebContentsImpl* embedder_web_contents() const {
    return attached_ ? owner_web_contents_ : nullptr;
}
```

Which results in null pointer access on LoadURL when the view is hidden (Because it's detached).
This is actually not a matter of race condition. As it's simply enough to hide the webview, then issue LoadURL to crash it.

This will avoid the crash by simply refusing to navigate when the view is not attached."
9766,43,19,0,Externals,alexeykuzmin,2017-06-15 15:24:54,743,679,78,0,"Related to #9679.  
Here are mostly fixes of trivial compilation errors. There are still plenty of errors left, I'm working on it.  
Keep it mind that a [PR](https://github.com/electron/libchromiumcontent/pull/313) with changes to libcc hasn't been merged yet.

/cc @tonyganch @kevinsawicki @zcbenz @setpixel @dezmathio

Almost all commits have a corresponding CL title as a first line of their commit message.
Link(s) to the CL(s) can be also found in the commit message.

Incomplete list of the compilation errors left:
- [x] **atom/browser/bridge_task_runner.cc**:16:28: error: call to implicitly-deleted copy constructor of 'base::OnceClosure'
  Related CLs: [chromium/2637843002](https://codereview.chromium.org/2637843002), [chromium/2726523002](https://codereview.chromium.org/2726523002), [chromium/2797133002](https://codereview.chromium.org/2797133002).
- [x] **atom/browser/api/frame_subscriber.cc**:87:10: error: no member named 'copyPixelsTo' in 'SkBitmap'
  Related issue: [Remove SkBitmap::copyPixelsTo](https://bugs.chromium.org/p/skia/issues/detail?id=6465)
- [x] **atom/browser/net/atom_url_request_job_factory.h**:58:44: error: only virtual member functions can be marked 'override'
  Related CL: https://codereview.chromium.org/2783343002
- [ ] _(OSR disabled)_ **atom/browser/osr/osr_web_contents_view.cc**:104:14: error: allocating an object of abstract class type 'atom::OffScreenRenderWidgetHostView'
- [ ] _(OSR disabled)_ **atom/browser/osr/osr_render_widget_host_view.cc**:562:40: error: use of undeclared identifier 'GetBackgroundOpaque'
- [ ]  _(OSR disabled)_ **atom/browser/osr/osr_render_widget_host_view.cc**:581:37: error: out-of-line definition of 'OnSwapCompositorFrame' does not match any declaration in 'atom::OffScreenRenderWidgetHostView'
- [ ]  _(OSR disabled)_ **atom/browser/osr/osr_render_widget_host_view.cc**:602:32: error: no member named 'SwapDelegatedFrame' in 'content::DelegatedFrameHost'
- [ ]  _(OSR disabled)_ **atom/browser/osr/osr_render_widget_host_view_mac.mm**:44:51: error: only virtual member functions can be marked 'override'
- [ ]  _(OSR disabled)_ **atom/browser/osr/osr_render_widget_host_view_mac.mm**:45:43: error: unknown type name 'ViewMsg_ReclaimCompositorResources'
- [x] **atom/common/native_mate_converters/blink_converter.cc**:250:28: error: no member named 'x' in 'blink::WebMouseEvent'
  Related CL: https://codereview.chromium.org/2782893002
- [x] **atom/renderer/api/atom_api_spell_check_client.h**:39:64: error: only virtual member functions can be marked 'override'
  Related issue: [OOPIF: SpellCheckProvider is a RenderViewObserver](https://crbug.com/638361) and [design doc](https://goo.gl/VfCENk).
- [x] **atom/renderer/atom_autofill_agent.h**:38:45: error: only virtual member functions can be marked 'override'
  Related CL: https://codereview.chromium.org/2766053002
- [x] **vendor/native_mate/native_mate/converter.h**:298:24: error: no member named 'ToV8' in 'mate::Converter<content::ServiceWorkerCapability, void>'
  Related CL: https://codereview.chromium.org/2751343002"
9734,1,1,4,Externals,igorshevach,2017-06-12 09:20:09,25,7,1,0,"usage:
enable full dump creation:
-full-memory-crash-report=1
force disable full dump creation:
-full-memory-crash-report=0.

IMPORTANT:
vendor/breakpad should be updated to latest master version since commit 33a4375 does not contain required code fixes."
9730,1,1,0,Externals,dezmathio,2017-06-12 06:58:00,1,1,1,0,"`Update CLANG_VERSION to match version Chrome is using in update.py`

was following https://electron.atom.io/docs/development/upgrading-chrome/ a bit loosely;

I followed this locally: https://github.com/electron/electron/blob/master/docs/development/build-instructions-osx.md
ran bootstrap.py, then build.py, then test.py scripts -- Wasn't 100% sure if I missed anything, the instructions in the upgrade guide didn't have instructions as detailed as the ones for building electron itself. Let me know if you want me to take this PR down. Cheers."
9708,1,11,0,Externals,juturu,2017-06-09 04:05:21,1,1,1,0,"Fixes #9688 #9560 #9691 

Reverts #8786 "
9648,2,78,8,Externals,develar,2017-06-01 16:03:16,290,5,11,0,"Addresses [Code Signing of ASAR files](https://github.com/electron/asar/issues/123).

* Any application that uses external files as code sources are not protected and code signing doesn't make sense.
* Anyone can use trusted app from trusted vendor as a template for malicious app.
  * macOS: Static validation failed (when you manually check using codesign tool or another tools), dynamic (performed on run for quarantined apps) passed.
  * Windows: no app bundle concept at all, no way to statically check app, no dynamic validation at all. Nothing prevents.
* Java, Electron apps are affected. 

How do we can fix it?

1. Embedding code sources into the executables.
    1.1 Modifying existing executable.
    * macOS: [Not possible](https://stackoverflow.com/questions/4022495/how-can-i-add-sections-to-an-existing-os-x-executable).
    * Windows: using windows resources.

     As it is not possible on macOS, this approach is rejected.

    1.2 Linking during build. It will complicate Electron app development. Another approach should be used.

    So, although embedding code sources into the executables approach is the most secured, price is too high. 

2. Really sign ASAR file and verify on ASAR file load. Well, implementation will be complex and fragile (very easy to verify code integrity, but identity validation...). So, this approach is rejected.

3. Keep code integrity data in the application manifest and verify only integrity on ASAR file load. As application manifest is a part of executable file (Windows) and `Info.plist` is a part of application bundle (macOS), we don't need to verify identity and so, our implementation is robust and straightforward. If integrity data will be changed — code signature will be broken and application will be marked as damaged by OS.

Third approach, ""code integrity data in the application manifest"", is implemented in this PR.

Some notes:
* macOS specific: Depending on not yet known reasons even modified Info.plist is not a reason to prevent run on macOS sometimes. Under some conditions app is marked as damaged, but under another conditions not (interestingly, in both cases app is quarantined (`com.apple.quarantine`, can be checked using `xattr` tool)). Well, it doesn't invalidate the whole idea of this PR:
    * small amount of data can be embedded into existing Mach-O object file if will be proven that `Info.plist` is not really secured. So, it can be implemented later if need.
    * static validation is not passed (since code signature will be broken), so, user has ability to verify application using standard tools.
* sha512 is used because [it is faster](https://crypto.stackexchange.com/questions/26336/sha512-faster-than-sha256) than sha256 on x64 machines.
   * 5MB hashed in 4ms, 30MB hashed in 45ms. So, integrity check doesn't slow down app loading.
* macOS specific: Officially [not recommended](https://developer.apple.com/library/content/technotes/tn2206/_index.html#//apple_ref/doc/uid/DTS40007919-CH1-TNTAG201) to sign non-Mach-O executables. So, unlikely PR to `electron-osx-sign` will be filed to sign ASAR files.
* Windows is unsecured, even macOS Gatekeeper doesn't work as expected... Should we worry about code integrity if even checks on OS level so insecure? Well... no excuse for us. Integrity check is cheap, build process is not complicated. So, why not to make sure that on our level user is protected and we do our best to protect users?

Checksums stored as JSON object under the key `AsarChecksums`. If key not specified — no integrity check. `electron-builder` (asar is enabled by default) will add integrity data on build (will be implemented as separated npm module to reuse this logic in other build tools).

Implemented for macOS only for now, I want to hear your feedback.

update 1: macOS performs full static validation on first run of downloaded application. So, changes in this PR not ""should"", but ""must"" be implemented (planned fix on `electron-osx-sign` under investigation)."
9617,1,2,0,Externals,iamsingla9,2017-05-29 16:46:47,1,1,1,0,Resolves #8118
9571,7,0,0,Externals,ghost,2017-05-24 00:36:19,147,131,12,0,I like Electron.
9565,1,3,1,Externals,Svennisen,2017-05-23 18:01:41,68,6,2,0,"Needed to use the capturePage functionality and then turn my NativeImage into a monochrome bitmap. Doing the monochrome conversion in nodejs was incredibly slow and therefore I added it as a separate function to NativeImage.

This is very useful when printing images to any kind of thermal printer."
9536,22,5,0,Externals,pilotpirxie,2017-05-19 21:47:31,0,0,0,0,
9502,2,1,0,Externals,liusy182,2017-05-17 02:49:40,17,0,2,0,"fix for #9454

This issue affects Windows as well. I have only tested on Windows platform but not on Mac (Sorry I do not have a Mac env set up)."
9494,5,7,2,Externals,alexstrat,2017-05-16 15:48:41,39,24,2,0,"With the objective to load some Chrome extensions in an Electron app, I noticed few things to add or correct in Electron's [`content_scripts`](https://developer.chrome.com/extensions/content_scripts) basic support that I propose in this PR:

1. Fixed: script was injected only if the current URL matched the first item of `content_scripts[].matchs` ignoring the following items (=> independent PR in https://github.com/electron/electron/pull/10075)
2. Fixed: run the different scripts in a same context. I stumbled upon a popular extension ([mailtracker](https://chrome.google.com/webstore/detail/mailtracker-for-gmail/pgbdljpkijehgoacbjpolaomhkoffhnl)) that works and expects this behavior, so I assumed it is the expected behavior. ⚠️ _bug: see below_
3. Added support for CSS injection (independent PR in https://github.com/electron/electron/pull/10076)
---
However, it looks like the changes I introduced in 48cff0c make the webContents crash when a script of the extension tries to modify `window` (`window.what = 'whatever'`).

I was able to setup an [environment](https://github.com/alexstrat/electron-boilerplate/pull/3) to reproduce and got this stack trace:
```
Received signal 11 SEGV_MAPERR 003f7b840822
 [0x00010b26d7ec]
 [0x00010b26d6a1]
 [0x7fffe71fab3a]
 [0x00010ab6fa12]
 [0x00010b4dc59a]
 [0x00010b4a2ee0]
 [0x00010b494830]
 [0x00010c054b7e]
 [0x00010ac17144]
 [0x00010ac99b13]
 [0x00010aca6c28]
 [0x00010aca6aa6]
 [0x00010ac0bbbc]
 [0x00010ac10854]
 [0x19664be8437d]
[end of stack trace]
```
How can I move forward with this stack trace?
Has anyone an idea of what may causes this?

_Related: #1498_"
9488,2,1,0,Externals,paulinaika,2017-05-16 06:29:01,263,1,3,0,…ws-store-guide.md [ci skip]
9478,1,0,0,Externals,djpereira,2017-05-15 18:18:00,0,0,0,0,"Updated documentation given that:
* `navigator.webkitGetUserMedia` is deprecated
* Passing `audio: true` as a constraint to `getUserMedia` when trying to capture audio for presentation throws an exception (i.e. ""Invalid screen capture request"")."
9465,5,0,0,Externals,mrxf,2017-05-15 06:07:22,4,4,1,0,
9426,1,0,0,Externals,MarshallOfSound,2017-05-10 23:23:08,3,4,2,0,/cc @zeke @kevinsawicki 
9406,2,2,0,Externals,neknalb,2017-05-08 13:20:50,6,6,3,0,"In case you want to use a BrowserWindow subclass the current implementation of `showSaveDialog` from `Electron.Dialog` fails in `parseArgs`.

The unwanted result of the current implementation leads to:

- window = null
- options = my_given_browserwindow_subclass_instance
- callback = my_given_options

With this PR I hopefully provide a solution."
9390,2,1,0,Externals,TimNZ,2017-05-06 01:28:05,19,0,1,0,"#9346 
"
9370,1,1,0,Externals,RobertWHurst,2017-05-04 04:48:27,0,0,0,0,"Changed ""ABI"" to ""API"""
9367,2,2,0,Externals,thomasLechaptois,2017-05-03 15:54:14,0,0,0,0,
9366,2,0,0,Externals,thomasLechaptois,2017-05-03 15:51:19,0,0,0,0,
9365,2,0,0,Externals,thomasLechaptois,2017-05-03 15:42:08,0,0,0,0,
9337,1,0,0,Externals,mcizol,2017-05-01 13:28:40,0,0,0,0,
9336,1,0,0,Externals,mcizol,2017-05-01 13:28:32,0,0,0,0,
9335,1,0,0,Externals,mcizol,2017-05-01 13:28:00,0,0,0,0,
9334,1,0,0,Externals,mcizol,2017-05-01 13:25:57,0,0,0,0,updated all turkish community links with auto invite link 
9224,1,3,0,Externals,poiru,2017-04-18 17:47:29,99,4,6,0,"This is a breaking change, but we must to do what we can to make
Electron secure by default. This is a small and necessary step towards
that goal."
9218,1,14,0,Externals,herrjemand,2017-04-18 06:59:36,36,36,36,0,"I found that it's a pain to build electron when you are running os with main python version to be python3. I think shebangs need to be more strict. This pull request updates all shebangs from: 

```
#!/usr/bin/env python
```

to

```
#!/usr/bin/env python2
```"
9217,1,1,0,Externals,upicik,2017-04-18 04:54:22,5,0,1,0,"[RAM] usage is added
issue #[8362 (https://github.com/electron/electron/issues/8362) ]"
9169,19,5,0,Externals,runinspring,2017-04-12 02:33:19,1600,256,19,0,
9140,1,8,0,Externals,poiru,2017-04-07 16:40:05,38,39,6,0,"Tested both framed and frameless windows with 100%, 125%, 150%, 175%,
and 200% DPI on Windows 10.

The only issue is that you might get the resize cursor at the right and
bottom edge of maximized frameless windows on some DPIs (>100% DPI for
me). This might just be a VM issue though.

This fixes #5267 and #8728.

# Test Plan

## Windows 7

### With Frame

- [ ] 200% DPI
- [ ] 150% DPI
- [ ] 125% DPI
- [ ] 100% DPI

### Without Frame

- [ ] 200% DPI
- [ ] 150% DPI
- [ ] 125% DPI
- [ ] 100% DPI

## Windows 8

### With Frame

- [ ] 200% DPI
- [ ] 150% DPI
- [ ] 125% DPI
- [ ] 100% DPI

### Without Frame

- [ ] 200% DPI
- [ ] 150% DPI
- [ ] 125% DPI
- [ ] 100% DPI

## Windows 10

### With Frame

- [x] 200% DPI
- [x] 150% DPI
- [x] 125% DPI
- [x] 100% DPI

### Without Frame

- [x] 200% DPI
- [x] 150% DPI
- [x] 125% DPI
- [x] 100% DPI

```html
<!DOCTYPE html>
<html>
  <head>
    <meta charset=""utf-8"">
    <style>
      body, html {
        padding: 0;
        margin: 0;
      }

      #outer {
        border: 5px solid red;
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
      }

      #inner {
        border: 5px solid blue;
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        padding: 20px;
      }
    </style>
  </head>
  <body>
    <div id=""outer"">
      <div id=""inner"">
        <button onclick=""require('electron').remote.getCurrentWindow().maximize()"">Maximize</button>
        <button onclick=""require('electron').remote.getCurrentWindow().unmaximize()"">Unmaximize</button>
        <button onclick=""window.close()"">Close</button>
      </div>
    </div>
  </body>
</html>
```"
9098,54,0,0,Externals,HackersZone,2017-04-03 17:24:13,552,142,44,0,No Way
9069,1,0,0,Externals,fonghuiyue,2017-03-31 01:49:18,358,11,16,0,
9068,14,13,0,Internals,joshaber,2017-03-30 21:32:51,0,0,0,0,"Add the `app.showCertificateTrust` API to show the OS-provided UI to let the user decide to accept and trust a self-signed or untrusted certificate:

![cert_trust_panel_5b4faf16-9b52-4d4f-8aa0-63b89361dd60](https://cloud.githubusercontent.com/assets/13760/24527176/0b9a9dfe-156f-11e7-9795-ecb429b25949.jpg)

~~I believe this would address https://github.com/electron/electron/issues/1956.~~ Negative, see the discussion below.

This is only the macOS-side of things. I think we can get @shiftkey to do the Windows side.

I'm opening this early because I have no idea what I'm doing and I'd welcome any feedback or advice anyone would like to provide."
9045,1,3,0,Externals,secondfry,2017-03-28 13:04:44,0,0,0,0,https://github.com/enlight/electron-inspector/issues/7
8990,1,3,0,Externals,saikrishnadeep,2017-03-23 07:17:02,0,0,0,0,"Fixes #5862 ""Menu.buildFromTemplate"" is not a function because of new electron require "
8980,1,6,0,Externals,arkon,2017-03-22 03:41:57,45,0,9,0,"This would be useful for https://github.com/Microsoft/vscode/issues/19707

Note that this PR is a WIP -- I just wanted to open it to get feedback on whether or not I'm going about this the right way, since I'm new to the codebase."
8953,1,9,0,Externals,tarruda,2017-03-17 17:21:41,30,17,8,0,"- Change the return type of AtomViewHostMsg_Message_Sync from `base::string16`
  to `base::ListValue`
- Adjust lib/browser/api/web-contents.js and /lib/renderer/api/ipc-renderer.js
  to wrap/unwrap return values to/from array, instead of
  serializing/deserializing JSON.

This change can greatly improve `ipcRenderer.sendSync` calls where the return
value contains Buffer instances, because those are converted to Array before
being serialized to JSON(which has no efficient way of representing byte
arrays).

A simple benchmark where remote.require('fs') was used to read a 16mb file got
at least 5x faster, not to mention it used a lot less memory.  This difference
tends increases with larger buffers."
8884,1,6,0,Externals,JanCVanB,2017-03-10 00:32:45,2,2,1,0,"Some array notations (`String[]` followed immediately by `(optional)`) results in an empty markdown link, which prevents `[] (optional)` from showing up in the final documentation preview."
8822,1,3,0,Externals,Anrock,2017-03-03 10:01:54,0,0,0,0,"Just wasted couple of days on that, so i wanted to document this, so other people won't waste they time again."
8808,2,19,0,Externals,odensc,2017-03-01 23:50:03,26,12,4,0,"Fixes #5267, #8728."
8782,1,2,0,Externals,odensc,2017-02-27 04:18:06,9,0,1,0,"Resolves #5267.

A frameless window with a thick frame (default) would overflow onto another monitor when maximized.

This PR fixes the issue by resetting the `maxPosition` pointer of `MINMAXINFO` to (0, 0) - before it was (-7, -7), which caused overflow onto the left monitor."
8761,3,1,0,Internals,kevinsawicki,2017-02-23 23:58:49,19,31,3,0,"The V8 value converter used for IPC arguments previously had a max recursion depth of 100: https://github.com/electron/electron/blob/cc688d7fa6a48e5133735eb67d665f5d193ec94f/atom/common/native_mate_converters/v8_value_converter.cc#L22

Really deep objects specified as arguments to remote functions currently throw errors because the metadata received gets truncated at the IPC layer and so the format received by `rpc-server.js`  is invalid/incomplete.

This pull request removes this recursion depth completely. This value seemed somewhat arbitrary and was originally inherited from Chrome. Currently we don't limit the size of IPC objects in other ways so this seems okay to do and can be improved upon further via https://github.com/electron/electron/issues/7286.

The other options I can think of here would be:

- Have `remote.js` throw errors when function arguments that will exceed this limit are specified.
- Gracefully handle invalid/incomplete metadata in `rpc-server.js`. This option would seem surprising to developers since large objects they send over would just have `null` fields certain places and would be hard to track the cause.

I noticed this issue while investigating #8423 and trying to send `module` over the remote interface which is pretty nested.

/cc @electron/maintainers "
8688,2,9,1,Externals,tonyganch,2017-02-15 14:27:41,61,11,4,0,"Fix for #8209.

In situation when there are two windows open, with one being in focus and another one being blurred, if we popup menu for the blurred window, click callbacks for menu items will get either `null` or focused window as second parameter.
That fix passes information about window used in `popup` method with fallback to a focused window.

Note that even though Chrome focuses a blurred window when you right-click on it, I don't think that will be a desired behavior for Electron users. Plus devs can always focus desired window manually. So I didn't modify that ""focusing"" logic.

I had trouble with the test. Apparently if I just use `menu.popup(window)`, the test gets stuck because no code after that line is run before I manually click on the window to close context menu. And I see no way to close it programmatically. So as a workaround I just set `menu.window` property (which should be done by `popup` method) and for that I created a testing-only method `_setWindow`. I don't like how it all looks, so I'll be grateful for advice on how to write a good test for my changes."
8683,1,1,9,Externals,fab1an,2017-02-14 19:02:45,21,21,7,0,
8674,1,8,0,Externals,danyaal,2017-02-13 22:53:42,0,0,0,0,"For security purposes, I believe we would want nodeIntegration to be disabled, right?"
8631,10,3,0,Externals,YurySolovyov,2017-02-08 19:08:20,27,14,4,0,Refs #8624 #7851 
8630,1,11,0,Externals,fab1an,2017-02-08 18:26:39,1,1,1,0,
8581,1,3,0,Externals,crowchirp,2017-02-03 13:57:05,1,1,1,0,
8580,1,1,0,Externals,crowchirp,2017-02-03 13:41:50,1,1,1,0,
8579,1,0,0,Externals,crowchirp,2017-02-03 13:28:57,3,3,1,0,
8578,1,4,0,Externals,ColinEberhardt,2017-02-03 06:27:38,2,0,1,0,"The new `sandbox` option is a very useful feature, but quite hidden. I think it should be added to the list!"
8550,1,7,0,Externals,CharlieHess,2017-02-01 02:55:23,1,5,1,0,"After performing some navigation that should be transparent to the user, I'd like to `clearHistory` so that they're unable to traverse it. Problem is, after doing that all calls to `getURL` start returning empty strings. It seems (to me) that `getURL` should always return the current `webContents` location."
8527,2,0,0,Externals,xchopin,2017-01-27 22:18:38,0,0,0,0,"Hi,

for the french doc there is a huge problem almost every links are dead"
8444,0,4,0,Externals,natebwangsut,2017-01-19 07:20:41,0,0,0,0,"I'm working on Thai translation to the Electron documents. I'll let you guys know if I have finished every translation in docs folder.

**TODO**:

- [x] Translate docs/README.md
- [x] Translate docs/faq.md
- [x] Translate docs/glossary.md
- [x] Translate docs/styleguide.md
- [ ] Translate docs/api/*
- [ ] Translate docs/development/*
- [ ] [WIP] Translate docs/tutorial/*"
8442,150,5,8,Externals,renaesop,2017-01-19 05:57:11,0,0,0,0,"Add a print option and an api to get printer list

### contents.printerList():
Get a list of printers, eg:
````js
[ { printerName: 'Zebra_LP2844',
    printerDescription: 'Zebra LP2844',
    printerStatus: 3,
    isDefault: 1,
    options: 
     { copies: '1',
       'device-uri': 'usb://Zebra/LP2844?location=14200000',
       finishings: '3',
       'job-cancel-after': '10800',
       'job-hold-until': 'no-hold',
       'job-priority': '50',
       'job-sheets': 'none,none',
       'marker-change-time': '0',
       'number-up': '1',
       'printer-commands': 'none',
       'printer-info': 'Zebra LP2844',
       'printer-is-accepting-jobs': 'true',
       'printer-is-shared': 'true',
       'printer-location': '',
       'printer-make-and-model': 'Zebra EPL2 Label Printer',
       'printer-state': '3',
       'printer-state-change-time': '1480656412',
       'printer-state-reasons': 'none',
       'printer-type': '36932',
       'printer-uri-supported': 'ipp://localhost/printers/Zebra_LP2844',
       system_driverinfo: 'Z' } } ]
````
 
### contents.print([options]):
- +deviceName: **string** The printerName  

"
8402,2,2,0,Externals,czipperz,2017-01-13 01:50:40,12,11,3,0,This also narrows the scope of the static global variable to inside the only function it is used in.
8382,1,3,5,Externals,ide,2017-01-11 04:15:55,27,1,4,0,"See the fixed issue for the context. This pulls in a vendored copy of Node that includes the described patch. **This commit depends on first merging https://github.com/electron/node/pull/21.**

Fixes #8358

Test Plan: Built Electron and verified it loaded the sample app correctly and that the module wrapper is the new one by viewing Node's source code in the Blink Inspector."
8372,1,15,0,Externals,Dhanielk,2017-01-09 19:32:22,1,1,1,0,"Fix properties type. Previously showed as 'String', now 'String[]'"
8367,1,1,0,Externals,alespergl,2017-01-09 15:37:30,2,18,2,0,See [libchromiumcontent #249](https://github.com/electron/libchromiumcontent/pull/249) for context.
8359,1,1,1,Externals,Maurice-Byrne,2017-01-07 11:00:27,2,0,1,0,Reminding the reader to exclude the electron/dist directory from their app.asar so it does not ad unnecessary file size.
8315,1,0,0,Externals,oukan,2016-12-31 15:19:23,81,3,1,0,"### Additional Entitlements

Depending on which Electron APIs your app uses, you may need to add additional
entitlements to your `parent.plist` file to be able to use these APIs from your
app's Mac App Store build.

I can't correct translation"
8307,1,3,0,Externals,boriskaiser,2016-12-29 19:43:04,1,1,1,0,
8280,3,12,0,Externals,MarshallOfSound,2016-12-24 21:33:40,166,0,6,0,"This allows apps to hook into the new `MPRemoteCommandCenter` API's on macOS 10.12.2.  Pretty sure this breaks on older macOS versions so I need to add a few ifs.  It add's two new `app` API's.

```js
app.initializeAsMediaPlayer()
```

```js
app.setNowPlaying({
  currentTime,
  duration,
  title,
  artist,
  album,
  id,
  state,
});
```

When I hooked this up to GPMDP it generates the correct system wide touch bar 😄 

<img width=""1085"" alt=""touch bar shot 2016-12-25 at 10 30 24 am"" src=""https://cloud.githubusercontent.com/assets/6634592/21468814/876ccfa6-ca8d-11e6-9cb8-09bcf171f1f3.png"">

**NOTE:** I totally did this on the plane on my way home still it still needs a bit of cleanup 👍 

**TODO**

* [ ] Add docs
* [x] Ensure it builds on non-macOS platforms
* [ ] Ensure it builds / runs on older macOS versions"
8264,2,7,2,Externals,gfpacheco,2016-12-21 17:23:34,3,0,1,0,Fixes #8208
8241,4,3,9,Externals,paulcbetts,2016-12-19 22:38:54,108,6,5,0,"This PR uses dodgy private APIs in order to set the application's title in Activity Monitor dynamically:

![image](https://cloud.githubusercontent.com/assets/1396/21331411/23aee6d8-c5f7-11e6-8319-198211d8d7c9.png)

On Windows you can't do this at all, and on Linux this calls `setproctitle`"
8222,1,4,0,Externals,uber-morlock,2016-12-16 22:31:27,0,0,0,0,":memo:
because if file is absent
IOError: [Errno 2] No such file or directory: 'your/path/electron/out/electron-api.json'"
8219,1,2,0,Externals,EtienneLem,2016-12-16 17:32:02,1,1,1,0,"I don’t know what’s your point of view on `instanceof`, for there a very few in the codebase and `var.constructor === Class` seems to be the preferred way. However, that doesn’t take inheritance into account.

In my app my windows instances are instantiated from classes that extends `BrowserWindow` and AFAIK that shouldn’t be an anti-pattern(?). Checking for `window.constructor` is always false, which means arguments are shifted making it impossible to attach a dialog to my windows and throws the `Buttons must be an array` error because it doesn’t properly find the `options` argument.

[api-dialog-spec.js](https://github.com/electron/electron/blob/master/spec/api-dialog-spec.js) only tests thrown errors, so I didn’t update them."
8168,1,5,3,Externals,wildeyes,2016-12-08 07:44:13,13,11,1,0,Guard against Object.prototype extensions causing errors like ` TypeError: Cannot read property 'checked' of undefined` in line 132.
8164,2,2,0,Externals,liusy182,2016-12-08 01:40:51,27,5,4,0,window portion of the implementation for #7725 
8146,1,0,0,Externals,liusy182,2016-12-06 09:10:20,36,11,2,0,"Fix for #8079 

As part of the fix, the `session` option for `protocol.registerHttpProtocol` is updated to accept a `string` or `null` instead of an object. The correct `BrowserContext` is obtained based on session's partition name if given."
8091,1,3,0,Internals,zeke,2016-11-28 19:41:43,16,4,3,0,cc @kevinsawicki @groundwater how does this look?
8058,3,1,1,Internals,zeke,2016-11-23 00:54:35,75,20,6,0,"This is an effort to document the codebase, and the roles different directories play in it.

🍐  @groundwater "
8053,3,0,0,Externals,LuisHsu,2016-11-22 16:00:57,499,0,3,0,
7996,2,11,0,Externals,deed02392,2016-11-17 07:36:48,1,1,1,0,Fix 'properties' type in documentation (was missing `[]` notation due to lack of Markdown escaping).
7948,1,1,3,Externals,paulcbetts,2016-11-12 00:09:03,7,0,1,0,"![image](https://cloud.githubusercontent.com/assets/1396/20233847/19937fce-a829-11e6-8689-a99fbfcee224.png)

I suspect that on Windows, calling into process.env is not a very snappy operation "
7914,2,3,0,Externals,gregnolle,2016-11-09 13:18:37,37,20,3,0,"First go at resolving #7891.

/cc @deepak1556: Thanks for your guidance in the issue report. Would you mind taking a look at this and see if you can see any issues please? I removed the call into the CT delegate that I see you added in #7651 since I don't want to bypass CT checking. I'm not clear exactly when CT checking happens though (before or after the CertVerifier::Verify call?) and perhaps there should still be a way of bypassing it?

I thought about maybe changing the interpretation of the callback value to:
* true - resets the verify_result, bypass CT and send back OK result
* false - send back ERR_FAILED result regardless of default cert verifier's result
* null - send back whatever result the default cert verifier sent and let CT checking happen normally; this assumes that CT checking happens afterwards

What do you think?"
7909,35,5,0,Internals,groundwater,2016-11-09 07:50:24,524,407,74,0,"Debug build compiles on:
- [x] OS X
- [x] Linux
- [x] Windows

Release build compiles on:
- [x] OS X
- [x] Linux
- [x] Windows

Tests passing on:
- [x] OS X
- [x] Linux
- [x] Windows

Fix features:
- [x] `insertCSS`
- [x] `inspectElement`
- [x] offscreen rendering
- [x] POST navigations
- [x] `navigator.requestMIDIAccess`

Merge:
- [ ] https://github.com/electron/libchromiumcontent/pull/239
- [ ] https://github.com/electron/brightray/pull/260

Fixes #6571
Fixes #7814 
Fixes #8062
Fixes #8366"
7889,0,0,0,Externals,gregnolle,2016-11-06 13:41:08,0,0,0,0,"…vent.

The existing ""data"" attribute only contains the certificate at the end of the chain. This PR exposes the full chain as an array of PEM-encoded strings."
7862,1,5,0,Externals,aliib,2016-11-03 16:59:05,4,4,1,0,A very long space is inserted between union type if I use for instance (String | Object).
7817,4,11,2,Externals,felixrieseberg,2016-10-31 21:41:38,27,0,2,0,"This tiny fix ensures that a fullscreen window on macOS can be hidden using `hide()` without the screen turning black.

Closes https://github.com/electron/electron/issues/6033"
7800,1,0,0,Externals,rtspeaks360,2016-10-30 13:56:38,0,0,0,0,"Adding appropriate comments to the test.py to make it more justified.
"
7799,1,0,0,Externals,sparshtekriwal,2016-10-30 10:53:04,0,0,1,0,
7798,1,2,0,Externals,sparshtekriwal,2016-10-30 10:49:36,2,0,1,0,
7789,8,1,3,Externals,paulcbetts,2016-10-28 19:48:55,45,6,6,0,"This PR adds a new field to the `sender` parameter of the browser's IPC callout `senderWebContentsId`. This along with a corresponding PR to `electron-remote` will allow Electron applications to consider certain frames as ""Trusted"" vs ""Untrusted"" with regards to allowing access to remote objects - without this, the only way to determine the source of an IPC message is via the sender sending along its WebContents ID, which means that a potentially compromised sender could possibly impersonate a trusted frame simply by guessing IDs until it works."
7786,1,0,3,Externals,privatzee,2016-10-28 14:32:49,2,0,1,0,"I , and likely many others, got tripped up while substituting single or double quotes in place of backticks in the loadURL example:

>   // and load the index.html of the app.
>   win.loadURL(\`file://${__dirname}/index.html\`)

Examples of the confusion being discussed: 
https://github.com/electron/electron-quick-start/issues/18
https://github.com/jaketrent/jaketrent-blog/issues/11
"
7775,1,3,0,Internals,zeke,2016-10-27 16:43:28,9,9,1,0,"@as-cii pointed out that node-gyp will soon have a `--devdir` flag: https://github.com/nodejs/node-gyp/pull/916

This updates the native modules doc to use that new flag instead of the `HOME=` prefix.

@as-cii, once that update is released, we should add something to this doc that specifies which version of node-gyp users will need to get this functionality. Right?
"
7773,2,1,4,Externals,freakomonk,2016-10-27 14:40:30,4,4,1,0,
7706,1,1,0,Internals,kevinsawicki,2016-10-24 02:12:33,20,6,3,0,"https://github.com/electron/electron/pull/7468 introduced focusing the menu bar button when clicked.

This caused the web contents to no longer report as focused causing some role-based menu items to no longer work on Windows.

This pull request updates the menu item role behavior to use the focused window's web contents as a fallback when the web contents itself is not reporting as focused.

Closes #7663
"
7703,1,0,0,Externals,arjndr,2016-10-23 05:28:48,0,0,0,0,"Cleared unwanted whitespace and beautified HTML code
"
7702,1,0,0,Externals,arjndr,2016-10-22 09:34:47,0,0,0,0,"Fixed typos I guess
"
7701,250,0,0,Externals,ghost,2016-10-22 02:16:48,12004,4515,477,0,
7695,1,1,0,Externals,dumconstantin,2016-10-21 21:48:23,1,1,1,0,
7682,1,7,0,Externals,tong,2016-10-20 15:07:52,1,1,1,0,"There exists no type of `any`, should be object.
"
7677,4,0,0,Externals,MichaelVasseur,2016-10-20 08:03:10,4343,9,17,0,
7675,1,0,0,Externals,kokdemo,2016-10-20 04:14:36,0,0,0,0,"update from electron
"
7671,1,15,0,Externals,pfrazee,2016-10-19 23:19:08,47,0,7,0,"Solves https://github.com/electron/electron/issues/7670

Per @deepak1556's advice, I added an interface to the `ContentClient:: AddSecureSchemesAndOrigins` method. Due to the timing in my tests, I found it had to be called before the 'ready' event, as with `registerStandardSchemes`.

I'm not sure what the best way is to automatically test this. Suggestions? I was able to confirm it works in my bug demo, https://github.com/pfrazee/electron-bug-securewebviewcrash.
"
7664,1,1,0,Externals,amtj,2016-10-18 19:46:31,0,0,0,0,
7648,1,3,0,Externals,MarshallOfSound,2016-10-17 08:34:24,3,1,1,0,"This might be up for debate but I've recently come across some really annoying errors on Sentry that I can't catch, prevent or handle in any way.  Here is an example of one.

``` js
Attempting to call a function in a renderer window that has been closed or released. Function provided here:  
n._triggerFile (C:\Users\<username>\AppData\Local\GPMDP_3\app-4.0.1\resources\app.asar\build\renderer\ui\components\settings\FileInput.js:9:1841.
```

This traces to a callback [here](https://github.com/MarshallOfSound/Google-Play-Music-Desktop-Player-UNOFFICIAL-/blob/master/src/renderer/ui/components/settings/FileInput.js#L28) from a call to `showOpenDialog`.  Somehow the `webContents` is being destroyed before that callback is fired.  There is literally nothing I can do about this as I can't ""unbind"" a callback.

I don't want to completely remove these errors as during development they are good and catch some issues.  However in production I don't want random webContents crashes or race conditions to throw errors at my users that I can't catch in a sensible way (`process.on('uncaughtException')`) doesn't count....

This PR adds a single environment variable which will stop these errors being thrown.  By default they will still be thrown but it means in production we can disable them.
"
7646,1,0,0,Externals,cflatts,2016-10-17 01:52:05,2,0,1,0,"This is a comment on a function for Hacktoberfest.
"
7642,82,0,0,Externals,jasonjyu,2016-10-16 02:05:10,2610,2217,215,0,
7638,1,0,0,Externals,tanishkhandelwal,2016-10-15 14:33:23,6,6,1,0,
7634,1,1,0,Externals,Varun-Sethu,2016-10-15 09:27:25,0,0,0,0,
7617,2,1,0,Externals,kbhatia1996,2016-10-14 04:37:20,2,0,1,0,
7612,0,20,9,Externals,gabriel,2016-10-13 20:34:10,0,0,0,0,"As discussed in https://github.com/electron/electron/issues/6889

Added an optional callback argument to openExternal whic